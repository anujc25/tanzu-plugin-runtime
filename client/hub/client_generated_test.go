// Copyright 2024 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Package hub provides functions to create Tanzu Hub client for specific context
package hub_test

// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// QueryAllProjectsApplicationEngineQuery includes the requested fields of the GraphQL type ApplicationEngineQuery.
type QueryAllProjectsApplicationEngineQuery struct {
	QueryProjects QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnection `json:"queryProjects"`
}

// GetQueryProjects returns QueryAllProjectsApplicationEngineQuery.QueryProjects, and is useful for accessing the field via an interface.
func (v *QueryAllProjectsApplicationEngineQuery) GetQueryProjects() QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnection {
	return v.QueryProjects
}

// QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnection includes the requested fields of the GraphQL type KubernetesKindProjectConnection.
type QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnection struct {
	Projects []QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnectionProjectsKubernetesKindProject `json:"projects"`
}

// GetProjects returns QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnection.Projects, and is useful for accessing the field via an interface.
func (v *QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnection) GetProjects() []QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnectionProjectsKubernetesKindProject {
	return v.Projects
}

// QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnectionProjectsKubernetesKindProject includes the requested fields of the GraphQL type KubernetesKindProject.
type QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnectionProjectsKubernetesKindProject struct {
	// name field, taken from metadata.name
	Name string `json:"name"`
}

// GetName returns QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnectionProjectsKubernetesKindProject.Name, and is useful for accessing the field via an interface.
func (v *QueryAllProjectsApplicationEngineQueryQueryProjectsKubernetesKindProjectConnectionProjectsKubernetesKindProject) GetName() string {
	return v.Name
}

// QueryAllProjectsResponse is returned by QueryAllProjects on success.
type QueryAllProjectsResponse struct {
	ApplicationEngineQuery QueryAllProjectsApplicationEngineQuery `json:"applicationEngineQuery"`
}

// GetApplicationEngineQuery returns QueryAllProjectsResponse.ApplicationEngineQuery, and is useful for accessing the field via an interface.
func (v *QueryAllProjectsResponse) GetApplicationEngineQuery() QueryAllProjectsApplicationEngineQuery {
	return v.ApplicationEngineQuery
}

// The query or mutation executed by QueryAllProjects.
const QueryAllProjects_Operation = `
query QueryAllProjects {
	applicationEngineQuery {
		queryProjects(first: 1000) {
			projects {
				name
			}
		}
	}
}
`

func QueryAllProjects(
	ctx_ context.Context,
	client_ graphql.Client,
) (*QueryAllProjectsResponse, error) {
	req_ := &graphql.Request{
		OpName: "QueryAllProjects",
		Query:  QueryAllProjects_Operation,
	}
	var err_ error

	var data_ QueryAllProjectsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
